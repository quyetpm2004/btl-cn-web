-- =========================
-- üîπ B·∫¢NG QU·∫¢N L√ù NG∆Ø·ªúI D√ôNG & PH√ÇN QUY·ªÄN
-- =========================
Table roles {
  id int [pk, increment]                        -- M√£ vai tr√≤ (kh√≥a ch√≠nh, t·ª± tƒÉng)
  name varchar                                  -- T√™n vai tr√≤ (Admin, C∆∞ d√¢n, Thu ng√¢n, K·ªπ thu·∫≠t vi√™n, ...)
  description text                              -- M√¥ t·∫£ ch·ª©c nƒÉng / quy·ªÅn h·∫°n c·ªßa vai tr√≤
}

Table users {
  id int [pk, increment]                        -- M√£ ng∆∞·ªùi d√πng (kh√≥a ch√≠nh)
  username varchar [not null, unique]           -- T√™n ƒëƒÉng nh·∫≠p (duy nh·∫•t)
  password varchar [not null]                   -- M·∫≠t kh·∫©u (ƒë√£ m√£ h√≥a)
  role_id int [ref: > roles.id]                 -- Vai tr√≤ ng∆∞·ªùi d√πng (li√™n k·∫øt b·∫£ng roles)
  email varchar                                 -- ƒê·ªãa ch·ªâ email
  phone varchar                                 -- S·ªë ƒëi·ªán tho·∫°i li√™n h·ªá
  avatar_url varchar                            -- ·∫¢nh ƒë·∫°i di·ªán (n·∫øu c√≥)
  status tinyint                                -- Tr·∫°ng th√°i t√†i kho·∫£n (0:'inactive', 1:'active')
  created_at timestamp                          -- Ng√†y t·∫°o t√†i kho·∫£n
  updated_at timestamp                          -- Ng√†y c·∫≠p nh·∫≠t g·∫ßn nh·∫•t
}

Table staffs {
  id int [pk, increment]                        -- M√£ nh√¢n vi√™n
  user_id int [ref: > users.id]                 -- T√†i kho·∫£n ng∆∞·ªùi d√πng li√™n k·∫øt
  full_name varchar                             -- H·ªç v√† t√™n nh√¢n vi√™n
  dob date                                      -- Ng√†y sinh
  gender tinyint                                -- Gi·ªõi t√≠nh (1:male, 2:female, 3:other)
  position varchar                              -- Ch·ª©c v·ª•
  department varchar                            -- Ph√≤ng ban
  id_card varchar                               -- S·ªë CCCD/CMND
  address varchar                               -- ƒê·ªãa ch·ªâ
  start_date date                               -- Ng√†y b·∫Øt ƒë·∫ßu l√†m vi·ªác
  salary int                                    -- M·ª©c l∆∞∆°ng
  status tinyint                                -- Tr·∫°ng th√°i nh√¢n vi√™n (0:'ngh·ªâ vi·ªác', 1:'ƒëang l√†m', 2:'ngh·ªâ ph√©p')
}

-- =========================
-- üîπ C∆Ø D√ÇN & CƒÇN H·ªò
-- =========================
Table residents {
  id int [pk, increment]                        -- M√£ c∆∞ d√¢n
  user_id int [ref: > users.id]                 -- T√†i kho·∫£n ng∆∞·ªùi d√πng li√™n k·∫øt
  full_name varchar                             -- H·ªç v√† t√™n c∆∞ d√¢n
  gender tinyint                                -- Gi·ªõi t√≠nh (1:male, 2:female, 3:other)
  dob date                                      -- Ng√†y sinh
  place_of_birth varchar                        -- N∆°i sinh
  ethnicity varchar                             -- D√¢n t·ªôc
  occupation varchar                            -- Ngh·ªÅ nghi·ªáp
  hometown varchar                              -- Qu√™ qu√°n
  id_card varchar                               -- S·ªë CCCD/CMND
  household_no varchar                          -- S·ªë h·ªô kh·∫©u / m√£ h·ªô d√¢n
  status tinyint                                -- Tr·∫°ng th√°i c∆∞ tr√∫ (1:'ƒëang ·ªü', 2:'t·∫°m v·∫Øng', 3:'chuy·ªÉn ƒëi')
  registered_at timestamp                       -- Ng√†y ƒëƒÉng k√Ω l√†m c∆∞ d√¢n
}

Table apartment_types {
  id int [pk, increment]                        -- M√£ lo·∫°i cƒÉn h·ªô
  name varchar                                  -- T√™n lo·∫°i cƒÉn (Studio, 1PN, 2PN, ...)
  description text                              -- M√¥ t·∫£ chi ti·∫øt
  layout_image varchar                          -- ·∫¢nh s∆° ƒë·ªì m·∫∑t b·∫±ng cƒÉn h·ªô
}

Table apartments {
  id int [pk, increment]                        -- M√£ cƒÉn h·ªô
  apartment_code varchar [not null, unique]     -- M√£ ƒë·ªãnh danh cƒÉn h·ªô (v√≠ d·ª•: A101)
  building varchar                              -- T√≤a nh√† (v√≠ d·ª•: T√≤a A)
  type_id int [ref: > apartment_types.id]       -- Lo·∫°i cƒÉn h·ªô
  area float                                    -- Di·ªán t√≠ch (m2)
  status tinyint                                -- Tr·∫°ng th√°i cƒÉn h·ªô (0:'Tr·ªëng', 1:'ƒêang ·ªü', 2:'ƒêang thu√™')
  floor int                                     -- T·∫ßng
  owner_id int [ref: > residents.id]            -- Ch·ªß s·ªü h·ªØu (n·∫øu c√≥)
}

Table resident_apartment {
  id int [pk, increment]                        -- M√£ li√™n k·∫øt c∆∞ d√¢n - cƒÉn h·ªô
  resident_id int [ref: > residents.id]         -- M√£ c∆∞ d√¢n
  apartment_id int [ref: > apartments.id]       -- M√£ cƒÉn h·ªô
  relationship varchar                          -- M·ªëi quan h·ªá (ch·ªß h·ªô, ng∆∞·ªùi thu√™, ng∆∞·ªùi th√¢n)
  start_date date                               -- Ng√†y b·∫Øt ƒë·∫ßu thu√™ / s·ªü h·ªØu
  end_date date                                 -- Ng√†y k·∫øt th√∫c h·ª£p ƒë·ªìng (n·∫øu c√≥)
}

Table vehicles {
  id int [pk, increment]                        -- M√£ xe
  apartment_id int [ref: > apartments.id]       -- CƒÉn h·ªô ƒëƒÉng k√Ω xe
  type tinyint                                  -- Lo·∫°i xe (1:'car', 2:'motorbike', 3:'bicycle')
  brand varchar                                 -- H√£ng xe (Toyota, Honda, VinFast, ...)
  license_plate varchar [unique]                -- Bi·ªÉn s·ªë xe (duy nh·∫•t)
  color varchar                                 -- M√†u xe
  status tinyint                                -- Tr·∫°ng th√°i (0:'inactive', 1:'active')
}

-- =========================
-- üîπ ƒê·ª¢T THU 
-- =========================
Table collection_periods {
  id int [pk, increment]                        -- M√£ ƒë·ª£t thu
  name varchar                                  -- T√™n ƒë·ª£t thu (vd: "Thu ph√≠ th√°ng 10/2025", "ƒê·ª£t qu√Ω 1/2026")
  type tinyint                                  -- Lo·∫°i ƒë·ª£t (1:'monthly', 2:'quarterly', 3:'yearly', 0:'custom')
  start_date date                               -- Ng√†y b·∫Øt ƒë·∫ßu √°p d·ª•ng ƒë·ª£t thu
  end_date date                                 -- Ng√†y k·∫øt th√∫c ƒë·ª£t thu
  description text                              -- M√¥ t·∫£ chi ti·∫øt ho·∫∑c ghi ch√∫
  created_at timestamp                          -- Ng√†y t·∫°o ƒë·ª£t thu
  created_by int [ref: > users.id]              -- Ng∆∞·ªùi t·∫°o ƒë·ª£t thu
  status tinyint                                -- Tr·∫°ng th√°i (0:'closed', 1:'active')
}

-- =========================
-- üîπ D·ªäCH V·ª§ & ƒêƒÇNG K√ù
-- =========================
Table services {
  id int [pk, increment]                        -- M√£ d·ªãch v·ª•
  name varchar                                  -- T√™n d·ªãch v·ª• (Gym, Internet,...)
  description text                              -- M√¥ t·∫£ chi ti·∫øt
  price int                                     -- ƒê∆°n gi√°
  unit varchar                                  -- ƒê∆°n v·ªã t√≠nh (th√°ng, l∆∞·ª£t, m2, ng∆∞·ªùi)
}

Table service_registrations {
  id int [pk, increment]                        -- M√£ ƒëƒÉng k√Ω d·ªãch v·ª•
  apartment_id int [ref: > apartments.id]       -- CƒÉn h·ªô ƒëƒÉng k√Ω
  service_id int [ref: > services.id]           -- D·ªãch v·ª• li√™n quan
  start_date date                               -- Ng√†y b·∫Øt ƒë·∫ßu
  end_date date                                 -- Ng√†y k·∫øt th√∫c
  status tinyint                                -- Tr·∫°ng th√°i (0:'inactive', 1:'active')
}

-- =========================
-- üîπ QU·∫¢N L√ù H√ìA ƒê∆†N & THANH TO√ÅN
-- =========================
Table invoices {
  id int [pk, increment]                        -- M√£ h√≥a ƒë∆°n
  apartment_id int [ref: > apartments.id]       -- CƒÉn h·ªô t∆∞∆°ng ·ª©ng
  period_id int [ref: > collection_periods.id]  -- ƒê·ª£t thu t∆∞∆°ng ·ª©ng
  total_amount bigInt                           -- T·ªïng ti·ªÅn c·∫ßn thanh to√°n
  status tinyint                                -- Tr·∫°ng th√°i (0:'unpaid', 1:'paid', 2:'overdue', 3:'cancelled')
  created_at timestamp                          -- Ng√†y l·∫≠p h√≥a ƒë∆°n
  created_by int [ref: > users.id]              -- Ng∆∞·ªùi l·∫≠p h√≥a ƒë∆°n
  note text                                     -- Ghi ch√∫ th√™m
}

Table payments {
  id int [pk, increment]                        -- M√£ giao d·ªãch thanh to√°n
  invoice_id int [ref: > invoices.id]           -- H√≥a ƒë∆°n li√™n quan
  resident_id int [ref: > residents.id]         -- C∆∞ d√¢n thanh to√°n
  method varchar                                -- H√¨nh th·ª©c ('cash','bank_transfer','credit_card','e_wallet')
  amount bigInt                                -- S·ªë ti·ªÅn thanh to√°n
  paid_at timestamp                             -- Ng√†y thanh to√°n
  transaction_code varchar                      -- M√£ giao d·ªãch ng√¢n h√†ng / h·ªá th·ªëng
}

Table account_balances {
  id int [pk, increment]                        -- M√£ s·ªë d∆∞
  apartment_id int [ref: > apartments.id]       -- CƒÉn h·ªô li√™n quan
  balance int default 0                         -- S·ªë d∆∞ hi·ªán t·∫°i (d∆∞∆°ng = d∆∞, √¢m = n·ª£)
  last_update timestamp                         -- Ng√†y c·∫≠p nh·∫≠t g·∫ßn nh·∫•t
}

-- =========================
-- üîπ QU·∫¢N L√ù THI·∫æT B·ªä & B·∫¢O TR√å
-- =========================
Table equipments {
  id int [pk, increment]                        -- M√£ thi·∫øt b·ªã
  name varchar                                  -- T√™n thi·∫øt b·ªã (camera, thang m√°y, c·∫£m bi·∫øn,...)
  location varchar                              -- V·ªã tr√≠ l·∫Øp ƒë·∫∑t
  status tinyint                                -- Tr·∫°ng th√°i (0:'inactive', 1:'active', 2:'under_maintenance', 3:'broken')
  last_maintenance timestamp                    -- L·∫ßn b·∫£o tr√¨ g·∫ßn nh·∫•t
}

Table maintenance_requests {
  id int [pk, increment]                        -- Phi·∫øu y√™u c·∫ßu b·∫£o tr√¨
  equipment_id int [ref: > equipments.id]       -- Thi·∫øt b·ªã li√™n quan
  resident_id int [ref: > residents.id]         -- Ng∆∞·ªùi g·ª≠i y√™u c·∫ßu (n·∫øu c√≥)
  description text                              -- M√¥ t·∫£ l·ªói / y√™u c·∫ßu
  priority tinyint                              -- M·ª©c ƒë·ªô ∆∞u ti√™n (1:'low', 2:'medium', 3:'high', 4:'urgent')
  status tinyint                                -- Tr·∫°ng th√°i (0:'pending', 1:'in_progress', 2:'done', 3:'cancelled')
  created_at timestamp                          -- Ng√†y g·ª≠i y√™u c·∫ßu
  assigned_to int [ref: > staffs.id]            -- Nh√¢n vi√™n ƒë∆∞·ª£c giao x·ª≠ l√Ω
  resolved_at timestamp                         -- Ng√†y ho√†n th√†nh th·ª±c t·∫ø
}

Table maintenance_schedules {
  id int [pk, increment]                        -- M√£ l·ªãch b·∫£o tr√¨
  equipment_id int [ref: > equipments.id]       -- Thi·∫øt b·ªã b·∫£o tr√¨
  start_at timestamp                            -- Ng√†y d·ª± ki·∫øn b·∫Øt ƒë·∫ßu
  end_at timestamp                              -- Ng√†y d·ª± ki·∫øn k·∫øt th√∫c
  assigned_to int [ref: > staffs.id]            -- Nh√¢n vi√™n ph·ª• tr√°ch
  description text                              -- Ghi ch√∫
  status tinyint                                -- Tr·∫°ng th√°i (0:'scheduled', 1:'completed')
}

-- =========================
-- üîπ TH√îNG B√ÅO & TIN T·ª®C
-- =========================
Table notifications {
  id int [pk, increment]                        -- M√£ th√¥ng b√°o
  title varchar                                 -- Ti√™u ƒë·ªÅ
  content text                                  -- N·ªôi dung chi ti·∫øt
  created_at timestamp                          -- Ng√†y ƒëƒÉng
  created_by int [ref: > users.id]              -- Ng∆∞·ªùi t·∫°o
  category tinyint                              -- Lo·∫°i (1:'system', 2:'event', 3:'fee', 4:'maintenance', 5:'other')
}

Table notification_receivers {
  id int [pk, increment]                        -- M√£ b·∫£n ghi
  notification_id int [ref: > notifications.id] -- Th√¥ng b√°o li√™n k·∫øt
  resident_id int [ref: > residents.id]         -- Ng∆∞·ªùi nh·∫≠n
  is_read boolean                               -- ƒê√£ ƒë·ªçc hay ch∆∞a
  read_at timestamp                             -- Th·ªùi gian ƒë·ªçc
}

Table news {
  id int [pk, increment]                        -- M√£ b√†i vi·∫øt
  title varchar                                 -- Ti√™u ƒë·ªÅ
  content text                                  -- N·ªôi dung
  created_at timestamp                          -- Ng√†y ƒëƒÉng
  category int                                  -- Danh m·ª•c ('event','th√¥ng b√°o','h∆∞·ªõng d·∫´n','tin n·ªôi khu')
}

-- =========================
-- üîπ B√ÅO C√ÅO, D·ª∞ √ÅN & C∆† S·ªû V·∫¨T CH·∫§T
-- =========================
Table financial_reports {
  id int [pk, increment]                        -- M√£ b√°o c√°o t√†i ch√≠nh
  title varchar                                 -- Ti√™u ƒë·ªÅ b√°o c√°o
  period_id int [ref: > collection_periods.id]  -- ƒê·ª£t thu t∆∞∆°ng ·ª©ng
  total_income bigInt                           -- T·ªïng thu
  total_expense bigInt                          -- T·ªïng chi
  created_at timestamp                          -- Ng√†y l·∫≠p
}

Table projects {
  id int [pk, increment]                        -- M√£ d·ª± √°n
  name varchar                                  -- T√™n d·ª± √°n (x√¢y d·ª±ng, c·∫£i t·∫°o,...)
  description text                              -- M√¥ t·∫£ chi ti·∫øt
  image_url varchar                             -- ·∫¢nh minh h·ªça
}

Table facilities {
  id int [pk, increment]                        -- M√£ c∆° s·ªü v·∫≠t ch·∫•t
  name varchar                                  -- T√™n c∆° s·ªü (b·ªÉ b∆°i, ph√≤ng gym,...)
  description text                              -- M√¥ t·∫£ chi ti·∫øt
  image_url varchar                             -- ·∫¢nh minh h·ªça
}

-- =========================
-- üîπ LI√äN H·ªÜ / TH√îNG TIN CHUNG C∆Ø
-- =========================
Table contacts {
  id int [pk, increment]                        -- M√£ li√™n h·ªá
  email varchar                                 -- Email ban qu·∫£n l√Ω
  phone varchar                                 -- S·ªë ƒëi·ªán tho·∫°i
  address varchar                               -- ƒê·ªãa ch·ªâ vƒÉn ph√≤ng
  map_embed_url text                            -- Link nh√∫ng b·∫£n ƒë·ªì Google Maps
}
